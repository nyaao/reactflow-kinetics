@startuml AppMain
!include settings.pu

class AppMain {
  state  [isOpen, setOpenState] = useState<boolean>(false);
  state [view, setView] = useState<'diagram'|'result'|'exptable'>('diagram');
  state [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);
  state open = Boolean(anchorEl);
  state inputRef = useRef<HTMLInputElement>(null);
  state [nodes, setNodes, onNodesChange] = useNodesState([]);
  state [edges, setEdges, onEdgesChange] = useEdgesState([]);
  state [schemeData, setSchemeData] = useState<{[key:string]:string}|null>(null);
  state [rereadingData, setRereadingData] = useState<{[key:string]:string}|null>(null);
  state [calculatedData, setCalculatedData] = useState<{[key:number]:number[]}>({});
  state [expData, setExpData] = useState<{[key:string]:number}[]>([{id:0, time:0.0, '[A]':1.2, '[B]':0.1}]);
  ---
  toggleOpenState = ()
  handleClose = ()
  handleClickListItem = (event: React.MouseEvent<HTMLElement>)
  handleImport = useCallback((e:ChangeEvent<HTMLInputElement>)
  handleExport=useCallback((e:{ preventDefault: () => void; })
  handleShowDerivative=async(NODES?:Node[],EDGES?:Edge[])
  render(): JSX
}
@enduml